#!/bin/bash

# Men√∫ automatizaci√≥n tests SQL Injection
# 2016 - Mikel Aguirre

opcion=999
encontrado=0

mostrar_menu_inic()
{
clear
echo "[1;31;40m"
echo "  ,---.   ,-----.   ,--.   ,--.       ,--------.,------. ,---. ,--------. "
echo " '   .-' '  .-.  '  |  |   \`--',-----.'--.  .--'|  .---''   .-''--.  .--' "
echo " \`.  \`-. |  | |  |  |  |   ,--.'-----'   |  |   |  \`--, \`.  \`-.   |  |    "
echo " .-'    |'  '-'  '-.|  '--.|  |          |  |   |  \`---..-'    |  |  |    "
echo " \`-----'  \`-----'--'\`-----'\`--'          \`--'   \`------'\`-----'   \`--'    "
echo "                                                                          "
echo "                                                  2016 - Mikel Aguirre    "
echo " "
echo "               Menu SQLi-TEST "
echo "----------------------------------------------"
echo "        [1] Test SQL Injection - M√©todo GET"
echo "        [2] Test SQL Injection - M√©todo POST"
echo "----------------------------------------------"
echo "        [0] Salir"
echo "----------------------------------------------"
echo "        Opcion: "
echo "[0;37;40m"
}

mostrar_menu_sec()
{
clear
echo "[1;31;40m"
echo "  ,---.   ,-----.   ,--.   ,--.       ,--------.,------. ,---. ,--------. "
echo " '   .-' '  .-.  '  |  |   \`--',-----.'--.  .--'|  .---''   .-''--.  .--' "
echo " \`.  \`-. |  | |  |  |  |   ,--.'-----'   |  |   |  \`--, \`.  \`-.   |  |    "
echo " .-'    |'  '-'  '-.|  '--.|  |          |  |   |  \`---..-'    |  |  |    "
echo " \`-----'  \`-----'--'\`-----'\`--'          \`--'   \`------'\`-----'   \`--'    "
echo "                                                                          "
echo "                                                  2016 - Mikel Aguirre    "
echo " "
if [ "$1" == "GET" ]; then
	echo "               Menu M√©todo GET "
else
	echo "               Menu M√©todo POST "
fi
echo "----------------------------------------------"
echo "        [1] Inyecci√≥n Manual                  "
echo "        [2] Inyecci√≥n Automatizada (fichero)  "
echo "----------------------------------------------"
echo "       [99] Salir"
echo "----------------------------------------------"
echo "        Opcion: "
echo "[0;37;40m"
}

ejecutar_test(){
if [ "$1" == "GET" ]; then
	# Entramos en el M√©todo GET
	mostrar_menu_sec "GET"
else
	# Entramos en el M√©todo POST
	mostrar_menu_sec "POST"
fi
# Posiciono el cursor a la derecha de Opci√≥n
# Leemos entrada del usuario
tput cup 16 15
read opcion2
case "$opcion2" in
	"1" )
	# Opci√≥n manual
	echo
	echo "Introduzca la URL a testear (sin incluir datos a enviar):"
	echo "Ejemplo: http://srv.vulnerable.com/search.php"
	echo "--------------------------------------------------"
	read URL
	echo
	echo "Introduzca el bloque de datos a enviar:"
	echo "Indique con INSERTAR el punto en el que desea insertar el c√≥digo de inyecci√≥n"
	echo "Ejemplo: foo=INSERTAR&action=Go"
	echo "--------------------------------------------------"
	while test "$encontrado" != "1"
	do
		read bloqueDatos
		# Continuo s√≥lo si el bloque contiene el substring INSERTAR
		if [[ $bloqueDatos =~ "INSERTAR" ]]; then
			encontrado=1
		else
			echo "Debe indicar el punto en el que realizar la inyecci√≥n"
		fi
	done
	encontrado=0
  	echo
	echo "Introduzca c√≥digo inyecci√≥n:"
	echo "--------------------------------------------------"
  	read codigo
  	# Montamos el bloque de datos sustituyendo INSERTAR por el c√≥digo introducido
  	bloqueInyeccion="${bloqueDatos//INSERTAR/$codigo}"
  	echo
  	echo "¬øDesea utilizar una Cookie espec√≠fica? (Y/N)"
  	echo "--------------------------------------------------"
  	while test "$encontrado" != "1"
	do
		read preguntaCookie
		# Continuo s√≥lo si el usuario responde Y o N
		if [[ $preguntaCookie == "Y" ]] || [[ $preguntaCookie == "y" ]]; then
			encontrado=1
			echo "¬øIntroduzca la Cookie a utilizar en la comunicaci√≥n?"
  			echo "--------------------------------------------------"
  			read cookie
		elif [[ $preguntaCookie == "N" ]] || [[ $preguntaCookie == "n" ]]; then
			echo "Continuamos sin especificar Cookie"
			encontrado=1
		else
			echo "Debe responder a la pregunta con Y o N"
		fi
	done
	encontrado=0
  	# Almacenamos la fecha/Hora actual para utilizarlo como sufijo del fichero
  	sufijo=$(date +"%d%m%y_%H%M%S")
  	fSalida="Salida_$sufijo.html"
  	echo "[0;36;40m"
  	echo "Testeando URL $URL?$bloqueInyeccion"
  	echo "--------------------------------------------------"
  	echo " Volcando test de inyecci√≥n en fichero $fSalida"
	echo "--------------------------------------------------"
	if [[ $preguntaCookie == "Y" ]] || [[ $preguntaCookie == "y" ]]; then
		if [[ "$1" == "GET" ]]; then
			curl --cookie "$cookie" --data-urlencode "$bloqueInyeccion" --get "$URL" > $fSalida
			# echo "Utilizando GET"
		else
			curl --cookie "$cookie" --data-urlencode "$bloqueInyeccion" "$URL" > $fSalida
			# echo "Utilizando POST"
		fi
	else
		if [[ "$1" == "GET" ]]; then
			curl --data-urlencode "$bloqueInyeccion" --get "$URL" > $fSalida
		else
			curl --data-urlencode "$bloqueInyeccion" "$URL" > $fSalida
		fi
	fi
	echo "[0;37;40m"
	echo "Pulse una Tecla para continuar"
	read tecla
	;;
	"2" )
	# Opci√≥n fichero
	echo
	echo "Introduzca la URL a testear (sin incluir datos a enviar):"
	echo "Ejemplo: http://srv.vulnerable.com/search.php"
	echo "--------------------------------------------------"
	read URL
	echo
	echo "Introduzca el bloque de datos a enviar:"
	echo "Indique con INSERTAR el punto en el que desea insertar el c√≥digo de inyecci√≥n"
	echo "Ejemplo: foo=INSERTAR&action=Go"
	echo "--------------------------------------------------"
	while test "$encontrado" != "1"
	do
		read bloqueDatos
		# Continuo s√≥lo si el bloque contiene el substring INSERTAR
		if [[ $bloqueDatos =~ "INSERTAR" ]]; then
			encontrado=1
		else
			echo "Debe indicar el punto en el que realizar la inyecci√≥n"
		fi
	done
	encontrado=0
	echo
	echo "Introduzca ruta completa fichero inyecciones:"
	echo "--------------------------------------------------"
	while test "$encontrado" != "1"
	do
		read fichero
		# Comprobamos si existe el fichero y continuamos s√≥lo si existe
		if [ -f "$fichero" ]; then
			encontrado=1
		else
			echo "El fichero indicado no existe"
		fi
	done
	encontrado=0
	echo
  	echo "¬øDesea utilizar una Cookie espec√≠fica? (Y/N)"
  	echo "--------------------------------------------------"
  	while test "$encontrado" != "1"
	do
		read preguntaCookie
		# Continuo s√≥lo si el usuario responde Y o N
		if [[ $preguntaCookie == "Y" ]] || [[ $preguntaCookie == "y" ]]; then
			encontrado=1
			echo "¬øIntroduzca la Cookie a utilizar en la comunicaci√≥n?"
  			echo "--------------------------------------------------"
  			read cookie
		elif [[ $preguntaCookie == "N" ]] || [[ $preguntaCookie == "n" ]]; then
			echo "Continuamos sin especificar Cookie"
			encontrado=1
		else
			echo "Debe responder a la pregunta con Y o N"
		fi
	done
	encontrado=0
  	# Almacenamos la fecha/Hora actual para utilizarlo como sufijo del fichero
  	sufijo=$(date +"%d%m%y_%H%M%S")
	echo "[0;36;40m"
	echo "--------------------------------------------------"
	echo " Realizando tests de inyecci√≥n del fichero $fichero"
	echo " Volcando resultado en fichero Salida_$sufijo [n].html"
	echo "--------------------------------------------------"
	n=0
	oldIFS=$IFS     # conserva el separador de campo
	IFS=$'\n'     # nuevo separador de campo, el caracter fin de l√≠nea
	# Por cada l√≠nea del fichero...
	for i in $(cat $fichero)
	do
		# Montamos el bloque de datos sustituyendo cada aparici√≥n de INSERTAR por la l√≠nea en curso del fichero
		bloqueInyeccion="${bloqueDatos//INSERTAR/$i}"
		fSalida="Salida_$sufijo $n.html"
		if [[ $preguntaCookie == "Y" ]] || [[ $preguntaCookie == "y" ]]; then
			if [ "$1" == "GET" ]; then
				echo "<!-- $bloqueInyeccion -->" & curl --cookie "$cookie" --data-urlencode "$bloqueInyeccion" --get "$URL" > $fSalida
			else
				echo "<!-- $bloqueInyeccion -->" & curl --cookie "$cookie" --data-urlencode "$bloqueInyeccion" "$URL" > $fSalida
			fi
		else
			if [ "$1" == "GET" ]; then
				echo "<!-- $bloqueInyeccion -->" & curl --data-urlencode "$bloqueInyeccion" --get "$URL" > $fSalida
			else
				echo "<!-- $bloqueInyeccion -->" & curl --data-urlencode "$bloqueInyeccion" "$URL" > $fSalida
			fi
		fi
		n=$(($n + 1))
	done
	IFS=$old_IFS     # restablece el separador de campo predeterminado
	echo "[0;37;40m"
	echo "Pulse una Tecla para continuar"
	read tecla
	;;
	"99")
	mostrar_menu_inic
	;;
	*)
	echo "Opci√≥n no v√°lida"
	echo "----------------------------------------------"
	echo "Pulse una Tecla para continuar"
	read tecla
	;;
esac
}

while test "$opcion" !=  "0"
do
mostrar_menu_inic
# Posiciono el cursor a la derecha de Opci√≥n
tput cup 16 16
# Leemos opcion
read opcion
case "$opcion" in
	"1" )
	# Lanzamos la funci√≥n ejecutar test con el argumento GET
	ejecutar_test "GET"
	;;
	"2" )
  	# Lanzamos la funci√≥n ejecutar test con el argumento POST
	ejecutar_test "POST"
	;;
	"0" )
	echo
	echo "Bye. Happy Hacking..."
	;;
	*)
	echo "Opci√≥n no v√°lida"
	echo "----------------------------------------------"
	echo "Pulse una Tecla para continuar"
	read tecla
	;;
esac
done;


